@page "/add_update_todo"
@page "/update_todo/{TodoId:int}"

@using MauiBlazorAuth0App.Services
@inject ITodoService TodoService
@inject NavigationManager NavManager

@attribute [Authorize]

@if (TodoId > 0)
{
        <h2>Add task</h2>
} else
{
        <h2>Edit your task</h2>
}


<div class="container mt-4">
    <div class="row justify-content-between">
        <div class="col">
            <div class="form-group">
                <label class="form-label h6 input-label">Due:</label>
                <input @bind="due" type="datetime-local" />
            </div>
        </div>
        <div class="col">
            @if (TodoId > 0)
            {
                if (isCompleted == false)
                {
                    <div class="ms-auto justify-content-end float-end">
                        <button @onclick="(() => setIsCompleted(true))" class="btn btn-success">Done</button>
                    </div>
                }
                else
                {
                    <div class="ms-auto justify-content-end float-end">
                        <button @onclick="(() => setIsCompleted(false))" class="btn btn-outline-success">Undone</button>
                    </div>
                }
            }
        </div>
    </div>
</div>

<div class="container mt-2 mb-4 input-bg rounded">
    <div class="form-group">
        <label class="form-label h6 input-label">Name</label>
        <input @bind="title" class="form-control" placeholder="Enter task name" required />
    </div>

    <div class="row justify-content-end mt-3">
        @if (TodoId > 0)
        {
            <div class="col">
                <button @onclick="AddTodoRecord" class="btn btn-primary me-2 rounded" type="submit">Update task</button>
                <button @onclick="CancelButton" class="btn due-pill rounded" type="submit">Cancel</button>
            </div>
        }
        else
        {
            <div class="col">
                <button @onclick="AddTodoRecord" class="btn btn-success me-2 rounded" type="submit">Create task</button>
                <button @onclick="CancelButton" class="btn rounded due-pill" type="submit">Back</button>
            </div>
        }
    </div>
</div>


@code {
    [Parameter]
    public int TodoId { get; set; }

    private string title;
    private DateTime due = DateTime.Now;
    private bool isCompleted;



    private void setIsCompleted(bool isCompleted)
    {
        this.isCompleted = isCompleted;
    }

    protected async override Task OnInitializedAsync()
    {
        if (TodoId > 0)
        {
            var response = await TodoService.GetTodoById(TodoId);
            if (response != null)
            {
                title = response.Title;
                due = response.Due;
                isCompleted = response.IsCompleted;
            }
        }
    }

    private void CancelButton()
    {
        NavManager.NavigateTo($"fetchdata");
    }

    private async void AddTodoRecord()
    {
        var todoModel = new Models.TodoModel
        {
            Due = due,
            Title = title,
            IsCompleted = isCompleted,
            TodoId = TodoId
        };

        int response = -1;
        if (TodoId > 0)
        {
            response = await TodoService.UpdateTodo(todoModel);
        }
        else
        {
            response = await TodoService.AddTodo(todoModel);
        }

        if (response > 0)
        {
            title = string.Empty;
            this.StateHasChanged();
            await App.Current.MainPage.DisplayAlert("Task Saved!", "Task recorded to Todo Table.", "OK");
            NavManager.NavigateTo($"fetchdata");
        }
        else
        {
            await App.Current.MainPage.DisplayAlert("Oops!", "Something went wrong while adding record.", "OK");
        }
    }
}

